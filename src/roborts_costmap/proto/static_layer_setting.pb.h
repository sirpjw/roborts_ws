// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: static_layer_setting.proto

#ifndef GOOGLE_PROTOBUF_INCLUDED_static_5flayer_5fsetting_2eproto
#define GOOGLE_PROTOBUF_INCLUDED_static_5flayer_5fsetting_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3021000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3021006 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata_lite.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_static_5flayer_5fsetting_2eproto
PROTOBUF_NAMESPACE_OPEN
namespace internal {
class AnyMetadata;
}  // namespace internal
PROTOBUF_NAMESPACE_CLOSE

// Internal implementation detail -- do not use these members.
struct TableStruct_static_5flayer_5fsetting_2eproto {
  static const uint32_t offsets[];
};
extern const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_static_5flayer_5fsetting_2eproto;
namespace roborts_costmap {
class ParaStaticLayer;
struct ParaStaticLayerDefaultTypeInternal;
extern ParaStaticLayerDefaultTypeInternal _ParaStaticLayer_default_instance_;
}  // namespace roborts_costmap
PROTOBUF_NAMESPACE_OPEN
template<> ::roborts_costmap::ParaStaticLayer* Arena::CreateMaybeMessage<::roborts_costmap::ParaStaticLayer>(Arena*);
PROTOBUF_NAMESPACE_CLOSE
namespace roborts_costmap {

// ===================================================================

class ParaStaticLayer final :
    public ::PROTOBUF_NAMESPACE_ID::Message /* @@protoc_insertion_point(class_definition:roborts_costmap.ParaStaticLayer) */ {
 public:
  inline ParaStaticLayer() : ParaStaticLayer(nullptr) {}
  ~ParaStaticLayer() override;
  explicit PROTOBUF_CONSTEXPR ParaStaticLayer(::PROTOBUF_NAMESPACE_ID::internal::ConstantInitialized);

  ParaStaticLayer(const ParaStaticLayer& from);
  ParaStaticLayer(ParaStaticLayer&& from) noexcept
    : ParaStaticLayer() {
    *this = ::std::move(from);
  }

  inline ParaStaticLayer& operator=(const ParaStaticLayer& from) {
    CopyFrom(from);
    return *this;
  }
  inline ParaStaticLayer& operator=(ParaStaticLayer&& from) noexcept {
    if (this == &from) return *this;
    if (GetOwningArena() == from.GetOwningArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetOwningArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance);
  }
  inline ::PROTOBUF_NAMESPACE_ID::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
  }

  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::PROTOBUF_NAMESPACE_ID::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::PROTOBUF_NAMESPACE_ID::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ParaStaticLayer& default_instance() {
    return *internal_default_instance();
  }
  static inline const ParaStaticLayer* internal_default_instance() {
    return reinterpret_cast<const ParaStaticLayer*>(
               &_ParaStaticLayer_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ParaStaticLayer& a, ParaStaticLayer& b) {
    a.Swap(&b);
  }
  inline void Swap(ParaStaticLayer* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() != nullptr &&
        GetOwningArena() == other->GetOwningArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetOwningArena() == other->GetOwningArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::PROTOBUF_NAMESPACE_ID::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ParaStaticLayer* other) {
    if (other == this) return;
    GOOGLE_DCHECK(GetOwningArena() == other->GetOwningArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ParaStaticLayer* New(::PROTOBUF_NAMESPACE_ID::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ParaStaticLayer>(arena);
  }
  using ::PROTOBUF_NAMESPACE_ID::Message::CopyFrom;
  void CopyFrom(const ParaStaticLayer& from);
  using ::PROTOBUF_NAMESPACE_ID::Message::MergeFrom;
  void MergeFrom( const ParaStaticLayer& from) {
    ParaStaticLayer::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::PROTOBUF_NAMESPACE_ID::Message& to_msg, const ::PROTOBUF_NAMESPACE_ID::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) final;
  uint8_t* _InternalSerialize(
      uint8_t* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const final { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::PROTOBUF_NAMESPACE_ID::Arena* arena, bool is_message_owned);
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(ParaStaticLayer* other);

  private:
  friend class ::PROTOBUF_NAMESPACE_ID::internal::AnyMetadata;
  static ::PROTOBUF_NAMESPACE_ID::StringPiece FullMessageName() {
    return "roborts_costmap.ParaStaticLayer";
  }
  protected:
  explicit ParaStaticLayer(::PROTOBUF_NAMESPACE_ID::Arena* arena,
                       bool is_message_owned = false);
  public:

  static const ClassData _class_data_;
  const ::PROTOBUF_NAMESPACE_ID::Message::ClassData*GetClassData() const final;

  ::PROTOBUF_NAMESPACE_ID::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kTopicNameFieldNumber = 8,
    kFirstMapOnlyFieldNumber = 1,
    kSubscribeToUpdatesFieldNumber = 2,
    kTrackUnknownSpaceFieldNumber = 3,
    kUseMaximumFieldNumber = 4,
    kUnknownCostValueFieldNumber = 5,
    kLethalThresholdFieldNumber = 7,
    kTrinaryMapFieldNumber = 6,
    kIsRawRosmessageFieldNumber = 9,
    kIsDebugFieldNumber = 10,
  };
  // required string topic_name = 8;
  bool has_topic_name() const;
  private:
  bool _internal_has_topic_name() const;
  public:
  void clear_topic_name();
  const std::string& topic_name() const;
  template <typename ArgT0 = const std::string&, typename... ArgT>
  void set_topic_name(ArgT0&& arg0, ArgT... args);
  std::string* mutable_topic_name();
  PROTOBUF_NODISCARD std::string* release_topic_name();
  void set_allocated_topic_name(std::string* topic_name);
  private:
  const std::string& _internal_topic_name() const;
  inline PROTOBUF_ALWAYS_INLINE void _internal_set_topic_name(const std::string& value);
  std::string* _internal_mutable_topic_name();
  public:

  // required bool first_map_only = 1;
  bool has_first_map_only() const;
  private:
  bool _internal_has_first_map_only() const;
  public:
  void clear_first_map_only();
  bool first_map_only() const;
  void set_first_map_only(bool value);
  private:
  bool _internal_first_map_only() const;
  void _internal_set_first_map_only(bool value);
  public:

  // required bool subscribe_to_updates = 2;
  bool has_subscribe_to_updates() const;
  private:
  bool _internal_has_subscribe_to_updates() const;
  public:
  void clear_subscribe_to_updates();
  bool subscribe_to_updates() const;
  void set_subscribe_to_updates(bool value);
  private:
  bool _internal_subscribe_to_updates() const;
  void _internal_set_subscribe_to_updates(bool value);
  public:

  // required bool track_unknown_space = 3;
  bool has_track_unknown_space() const;
  private:
  bool _internal_has_track_unknown_space() const;
  public:
  void clear_track_unknown_space();
  bool track_unknown_space() const;
  void set_track_unknown_space(bool value);
  private:
  bool _internal_track_unknown_space() const;
  void _internal_set_track_unknown_space(bool value);
  public:

  // required bool use_maximum = 4;
  bool has_use_maximum() const;
  private:
  bool _internal_has_use_maximum() const;
  public:
  void clear_use_maximum();
  bool use_maximum() const;
  void set_use_maximum(bool value);
  private:
  bool _internal_use_maximum() const;
  void _internal_set_use_maximum(bool value);
  public:

  // required int32 unknown_cost_value = 5;
  bool has_unknown_cost_value() const;
  private:
  bool _internal_has_unknown_cost_value() const;
  public:
  void clear_unknown_cost_value();
  int32_t unknown_cost_value() const;
  void set_unknown_cost_value(int32_t value);
  private:
  int32_t _internal_unknown_cost_value() const;
  void _internal_set_unknown_cost_value(int32_t value);
  public:

  // required int32 lethal_threshold = 7;
  bool has_lethal_threshold() const;
  private:
  bool _internal_has_lethal_threshold() const;
  public:
  void clear_lethal_threshold();
  int32_t lethal_threshold() const;
  void set_lethal_threshold(int32_t value);
  private:
  int32_t _internal_lethal_threshold() const;
  void _internal_set_lethal_threshold(int32_t value);
  public:

  // required bool trinary_map = 6;
  bool has_trinary_map() const;
  private:
  bool _internal_has_trinary_map() const;
  public:
  void clear_trinary_map();
  bool trinary_map() const;
  void set_trinary_map(bool value);
  private:
  bool _internal_trinary_map() const;
  void _internal_set_trinary_map(bool value);
  public:

  // required bool is_raw_rosmessage = 9;
  bool has_is_raw_rosmessage() const;
  private:
  bool _internal_has_is_raw_rosmessage() const;
  public:
  void clear_is_raw_rosmessage();
  bool is_raw_rosmessage() const;
  void set_is_raw_rosmessage(bool value);
  private:
  bool _internal_is_raw_rosmessage() const;
  void _internal_set_is_raw_rosmessage(bool value);
  public:

  // required bool is_debug = 10;
  bool has_is_debug() const;
  private:
  bool _internal_has_is_debug() const;
  public:
  void clear_is_debug();
  bool is_debug() const;
  void set_is_debug(bool value);
  private:
  bool _internal_is_debug() const;
  void _internal_set_is_debug(bool value);
  public:

  // @@protoc_insertion_point(class_scope:roborts_costmap.ParaStaticLayer)
 private:
  class _Internal;

  // helper for ByteSizeLong()
  size_t RequiredFieldsByteSizeFallback() const;

  template <typename T> friend class ::PROTOBUF_NAMESPACE_ID::Arena::InternalHelper;
  typedef void InternalArenaConstructable_;
  typedef void DestructorSkippable_;
  struct Impl_ {
    ::PROTOBUF_NAMESPACE_ID::internal::HasBits<1> _has_bits_;
    mutable ::PROTOBUF_NAMESPACE_ID::internal::CachedSize _cached_size_;
    ::PROTOBUF_NAMESPACE_ID::internal::ArenaStringPtr topic_name_;
    bool first_map_only_;
    bool subscribe_to_updates_;
    bool track_unknown_space_;
    bool use_maximum_;
    int32_t unknown_cost_value_;
    int32_t lethal_threshold_;
    bool trinary_map_;
    bool is_raw_rosmessage_;
    bool is_debug_;
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_static_5flayer_5fsetting_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// ParaStaticLayer

// required bool first_map_only = 1;
inline bool ParaStaticLayer::_internal_has_first_map_only() const {
  bool value = (_impl_._has_bits_[0] & 0x00000002u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_first_map_only() const {
  return _internal_has_first_map_only();
}
inline void ParaStaticLayer::clear_first_map_only() {
  _impl_.first_map_only_ = false;
  _impl_._has_bits_[0] &= ~0x00000002u;
}
inline bool ParaStaticLayer::_internal_first_map_only() const {
  return _impl_.first_map_only_;
}
inline bool ParaStaticLayer::first_map_only() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.first_map_only)
  return _internal_first_map_only();
}
inline void ParaStaticLayer::_internal_set_first_map_only(bool value) {
  _impl_._has_bits_[0] |= 0x00000002u;
  _impl_.first_map_only_ = value;
}
inline void ParaStaticLayer::set_first_map_only(bool value) {
  _internal_set_first_map_only(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.first_map_only)
}

// required bool subscribe_to_updates = 2;
inline bool ParaStaticLayer::_internal_has_subscribe_to_updates() const {
  bool value = (_impl_._has_bits_[0] & 0x00000004u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_subscribe_to_updates() const {
  return _internal_has_subscribe_to_updates();
}
inline void ParaStaticLayer::clear_subscribe_to_updates() {
  _impl_.subscribe_to_updates_ = false;
  _impl_._has_bits_[0] &= ~0x00000004u;
}
inline bool ParaStaticLayer::_internal_subscribe_to_updates() const {
  return _impl_.subscribe_to_updates_;
}
inline bool ParaStaticLayer::subscribe_to_updates() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.subscribe_to_updates)
  return _internal_subscribe_to_updates();
}
inline void ParaStaticLayer::_internal_set_subscribe_to_updates(bool value) {
  _impl_._has_bits_[0] |= 0x00000004u;
  _impl_.subscribe_to_updates_ = value;
}
inline void ParaStaticLayer::set_subscribe_to_updates(bool value) {
  _internal_set_subscribe_to_updates(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.subscribe_to_updates)
}

// required bool track_unknown_space = 3;
inline bool ParaStaticLayer::_internal_has_track_unknown_space() const {
  bool value = (_impl_._has_bits_[0] & 0x00000008u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_track_unknown_space() const {
  return _internal_has_track_unknown_space();
}
inline void ParaStaticLayer::clear_track_unknown_space() {
  _impl_.track_unknown_space_ = false;
  _impl_._has_bits_[0] &= ~0x00000008u;
}
inline bool ParaStaticLayer::_internal_track_unknown_space() const {
  return _impl_.track_unknown_space_;
}
inline bool ParaStaticLayer::track_unknown_space() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.track_unknown_space)
  return _internal_track_unknown_space();
}
inline void ParaStaticLayer::_internal_set_track_unknown_space(bool value) {
  _impl_._has_bits_[0] |= 0x00000008u;
  _impl_.track_unknown_space_ = value;
}
inline void ParaStaticLayer::set_track_unknown_space(bool value) {
  _internal_set_track_unknown_space(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.track_unknown_space)
}

// required bool use_maximum = 4;
inline bool ParaStaticLayer::_internal_has_use_maximum() const {
  bool value = (_impl_._has_bits_[0] & 0x00000010u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_use_maximum() const {
  return _internal_has_use_maximum();
}
inline void ParaStaticLayer::clear_use_maximum() {
  _impl_.use_maximum_ = false;
  _impl_._has_bits_[0] &= ~0x00000010u;
}
inline bool ParaStaticLayer::_internal_use_maximum() const {
  return _impl_.use_maximum_;
}
inline bool ParaStaticLayer::use_maximum() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.use_maximum)
  return _internal_use_maximum();
}
inline void ParaStaticLayer::_internal_set_use_maximum(bool value) {
  _impl_._has_bits_[0] |= 0x00000010u;
  _impl_.use_maximum_ = value;
}
inline void ParaStaticLayer::set_use_maximum(bool value) {
  _internal_set_use_maximum(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.use_maximum)
}

// required int32 unknown_cost_value = 5;
inline bool ParaStaticLayer::_internal_has_unknown_cost_value() const {
  bool value = (_impl_._has_bits_[0] & 0x00000020u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_unknown_cost_value() const {
  return _internal_has_unknown_cost_value();
}
inline void ParaStaticLayer::clear_unknown_cost_value() {
  _impl_.unknown_cost_value_ = 0;
  _impl_._has_bits_[0] &= ~0x00000020u;
}
inline int32_t ParaStaticLayer::_internal_unknown_cost_value() const {
  return _impl_.unknown_cost_value_;
}
inline int32_t ParaStaticLayer::unknown_cost_value() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.unknown_cost_value)
  return _internal_unknown_cost_value();
}
inline void ParaStaticLayer::_internal_set_unknown_cost_value(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000020u;
  _impl_.unknown_cost_value_ = value;
}
inline void ParaStaticLayer::set_unknown_cost_value(int32_t value) {
  _internal_set_unknown_cost_value(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.unknown_cost_value)
}

// required bool trinary_map = 6;
inline bool ParaStaticLayer::_internal_has_trinary_map() const {
  bool value = (_impl_._has_bits_[0] & 0x00000080u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_trinary_map() const {
  return _internal_has_trinary_map();
}
inline void ParaStaticLayer::clear_trinary_map() {
  _impl_.trinary_map_ = false;
  _impl_._has_bits_[0] &= ~0x00000080u;
}
inline bool ParaStaticLayer::_internal_trinary_map() const {
  return _impl_.trinary_map_;
}
inline bool ParaStaticLayer::trinary_map() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.trinary_map)
  return _internal_trinary_map();
}
inline void ParaStaticLayer::_internal_set_trinary_map(bool value) {
  _impl_._has_bits_[0] |= 0x00000080u;
  _impl_.trinary_map_ = value;
}
inline void ParaStaticLayer::set_trinary_map(bool value) {
  _internal_set_trinary_map(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.trinary_map)
}

// required int32 lethal_threshold = 7;
inline bool ParaStaticLayer::_internal_has_lethal_threshold() const {
  bool value = (_impl_._has_bits_[0] & 0x00000040u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_lethal_threshold() const {
  return _internal_has_lethal_threshold();
}
inline void ParaStaticLayer::clear_lethal_threshold() {
  _impl_.lethal_threshold_ = 0;
  _impl_._has_bits_[0] &= ~0x00000040u;
}
inline int32_t ParaStaticLayer::_internal_lethal_threshold() const {
  return _impl_.lethal_threshold_;
}
inline int32_t ParaStaticLayer::lethal_threshold() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.lethal_threshold)
  return _internal_lethal_threshold();
}
inline void ParaStaticLayer::_internal_set_lethal_threshold(int32_t value) {
  _impl_._has_bits_[0] |= 0x00000040u;
  _impl_.lethal_threshold_ = value;
}
inline void ParaStaticLayer::set_lethal_threshold(int32_t value) {
  _internal_set_lethal_threshold(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.lethal_threshold)
}

// required string topic_name = 8;
inline bool ParaStaticLayer::_internal_has_topic_name() const {
  bool value = (_impl_._has_bits_[0] & 0x00000001u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_topic_name() const {
  return _internal_has_topic_name();
}
inline void ParaStaticLayer::clear_topic_name() {
  _impl_.topic_name_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001u;
}
inline const std::string& ParaStaticLayer::topic_name() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.topic_name)
  return _internal_topic_name();
}
template <typename ArgT0, typename... ArgT>
inline PROTOBUF_ALWAYS_INLINE
void ParaStaticLayer::set_topic_name(ArgT0&& arg0, ArgT... args) {
 _impl_._has_bits_[0] |= 0x00000001u;
 _impl_.topic_name_.Set(static_cast<ArgT0 &&>(arg0), args..., GetArenaForAllocation());
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.topic_name)
}
inline std::string* ParaStaticLayer::mutable_topic_name() {
  std::string* _s = _internal_mutable_topic_name();
  // @@protoc_insertion_point(field_mutable:roborts_costmap.ParaStaticLayer.topic_name)
  return _s;
}
inline const std::string& ParaStaticLayer::_internal_topic_name() const {
  return _impl_.topic_name_.Get();
}
inline void ParaStaticLayer::_internal_set_topic_name(const std::string& value) {
  _impl_._has_bits_[0] |= 0x00000001u;
  _impl_.topic_name_.Set(value, GetArenaForAllocation());
}
inline std::string* ParaStaticLayer::_internal_mutable_topic_name() {
  _impl_._has_bits_[0] |= 0x00000001u;
  return _impl_.topic_name_.Mutable(GetArenaForAllocation());
}
inline std::string* ParaStaticLayer::release_topic_name() {
  // @@protoc_insertion_point(field_release:roborts_costmap.ParaStaticLayer.topic_name)
  if (!_internal_has_topic_name()) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001u;
  auto* p = _impl_.topic_name_.Release();
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  return p;
}
inline void ParaStaticLayer::set_allocated_topic_name(std::string* topic_name) {
  if (topic_name != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001u;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001u;
  }
  _impl_.topic_name_.SetAllocated(topic_name, GetArenaForAllocation());
#ifdef PROTOBUF_FORCE_COPY_DEFAULT_STRING
  if (_impl_.topic_name_.IsDefault()) {
    _impl_.topic_name_.Set("", GetArenaForAllocation());
  }
#endif // PROTOBUF_FORCE_COPY_DEFAULT_STRING
  // @@protoc_insertion_point(field_set_allocated:roborts_costmap.ParaStaticLayer.topic_name)
}

// required bool is_raw_rosmessage = 9;
inline bool ParaStaticLayer::_internal_has_is_raw_rosmessage() const {
  bool value = (_impl_._has_bits_[0] & 0x00000100u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_is_raw_rosmessage() const {
  return _internal_has_is_raw_rosmessage();
}
inline void ParaStaticLayer::clear_is_raw_rosmessage() {
  _impl_.is_raw_rosmessage_ = false;
  _impl_._has_bits_[0] &= ~0x00000100u;
}
inline bool ParaStaticLayer::_internal_is_raw_rosmessage() const {
  return _impl_.is_raw_rosmessage_;
}
inline bool ParaStaticLayer::is_raw_rosmessage() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.is_raw_rosmessage)
  return _internal_is_raw_rosmessage();
}
inline void ParaStaticLayer::_internal_set_is_raw_rosmessage(bool value) {
  _impl_._has_bits_[0] |= 0x00000100u;
  _impl_.is_raw_rosmessage_ = value;
}
inline void ParaStaticLayer::set_is_raw_rosmessage(bool value) {
  _internal_set_is_raw_rosmessage(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.is_raw_rosmessage)
}

// required bool is_debug = 10;
inline bool ParaStaticLayer::_internal_has_is_debug() const {
  bool value = (_impl_._has_bits_[0] & 0x00000200u) != 0;
  return value;
}
inline bool ParaStaticLayer::has_is_debug() const {
  return _internal_has_is_debug();
}
inline void ParaStaticLayer::clear_is_debug() {
  _impl_.is_debug_ = false;
  _impl_._has_bits_[0] &= ~0x00000200u;
}
inline bool ParaStaticLayer::_internal_is_debug() const {
  return _impl_.is_debug_;
}
inline bool ParaStaticLayer::is_debug() const {
  // @@protoc_insertion_point(field_get:roborts_costmap.ParaStaticLayer.is_debug)
  return _internal_is_debug();
}
inline void ParaStaticLayer::_internal_set_is_debug(bool value) {
  _impl_._has_bits_[0] |= 0x00000200u;
  _impl_.is_debug_ = value;
}
inline void ParaStaticLayer::set_is_debug(bool value) {
  _internal_set_is_debug(value);
  // @@protoc_insertion_point(field_set:roborts_costmap.ParaStaticLayer.is_debug)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)

}  // namespace roborts_costmap

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // GOOGLE_PROTOBUF_INCLUDED_GOOGLE_PROTOBUF_INCLUDED_static_5flayer_5fsetting_2eproto
